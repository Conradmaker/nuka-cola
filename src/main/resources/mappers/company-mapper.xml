<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="companymapper">

	<resultMap id="companyResultSet" type="Company">
		<result column="comp_no" property="compNo"/>
		<result column="comp_name" property="compName"/>
		<result column="comp_info" property="compInfo"/>
		<result column="comp_email" property="compEmail"/>
		<result column="comp_address" property="compAddress"/>
		<result column="comp_logo" property="compLogo"/>
		<result column="comp_headcount" property="headCount"/>
		<result column="comp_birth" property="compBirth"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="user_no" property="userNo"/>
		<result column="comp_pm" property="compPm"/>
	</resultMap>
	
	<resultMap id="skillResultSet" type="Skills">
		<result column="skill_no" property="skillNo"/>
		<result column="skill_name" property="skillName"/>
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
		select
			   count(*)
		from   nukacola.companys
	</select>
	
	
	<select id="selectCompanyList" resultMap="companyResultSet">
		 select
		        comp_no
		      , comp_info
		      , comp_name
		      , comp_address
		      , comp_logo
		   from companys
		  order
		     by created_at desc
	</select>
	
	<insert id="insertCompany" parameterType="Company">
		insert
		into companys
			(
			  comp_no
			, comp_name
			, comp_info
			, comp_email
			, comp_address
			, comp_logo
			, comp_headcount
			, comp_birth
			, created_at
			, updated_at
			, user_no
			, comp_pm
			)
			values
			(
			   seq_comp.nextval
	         , #{compName}
	         , #{compInfo}
	         , #{compEmail}
	         , #{compAddress}
	         , #{compLogo}
	         , #{headCount}
	         , #{compBirth}
	         , default
	         , default
	         , #{userNo}
	         , #{userNo}
	        )
	</insert>
	
	<!--기술식별자 가져오기 -->
	<select id="checkSkill" parameterType="string" resultMap="skillResultSet">
		select
			   skill_no
			 , skill_name
		from skills
		where skill_name like '%' || #{skillName} || '%'
	</select>
	
	<!-- 회사번호 알아오기 -->
	<select id="selectCompanyNo" parameterType="string" resultMap="companyResultSet">
		select
				comp_no
		  from companys
		 where comp_name = #{compName}
	</select>
	
	<insert id="insertCompindus" parameterType="CompIndus">
   		 insert
   		  into compindus
   			 (
		   		comp_no
		   	  , indus_no
		   	 )
   			 values
   			 (
               #{compNo}
             , #{indusNo}
             )
	</insert>
	
	
	<update id="insertTech">
			<!-- collection = 반복문 돌릴 list의 이름 item : list안에서 순차적으로 접근할 값 변수명-->
		<foreach collection="skillsNo" item="no" open="insert all" close="SELECT * FROM DUAL">
			
			into tech_stacks
			(
			   comp_no
			 , skill_no
			 , stacks_posi
			 , created_at
			)
			values
			(
			   #{compNo}
			  ,#{no}
			  ,#{backNo}
			  ,default
			)
		
		</foreach>
	</update>
	<select  id="searchCompanyList" resultMap="companyResultSet" >
		 select
		        comp_no
		      , comp_info
		      , comp_name
		      , comp_address
		      , comp_logo
		   from companys
		  where comp_name like '%'||#{keyword}||'%'
		  order
		     by created_at desc
	</select>
	
	<select id="countCompany" resultType="_int">
		select 
			   count(*)
	      from companys
		 where comp_name like '%'||#{keyword}||'%'
		 order
		    by created_at desc
	</select>
	
	<select id="rankingCompanyList" resultMap="companyResultSet">
		select rownum,a.*
          from ( select a.*, 
                (select "num" from 
                ( select comp_no, count(*) "num" from comp_sub group by comp_no)
                where comp_no=a.comp_no) sub_count
                from companys a
                order by sub_count desc nulls last
                )a
	</select>
	
</mapper>